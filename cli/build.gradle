plugins{
    id 'java'
    id 'maven'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}


apply plugin: 'application'

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        html.destination "${buildDir}/jacocoHtml"
    }
    executionData = files('build/jacoco/jacocoTest.exec', 'build/jacoco/test.exec')
}

configurations.all {
    configurations.all {
        resolutionStrategy {
            // force certain versions of dependencies (including transitive)
            //  *append new forced modules:
            force 'com.fasterxml.jackson.core:jackson-databind:2.8.3'
            //  *replace existing forced modules with new ones:
            forcedModules = ['com.fasterxml.jackson.core:jackson-databind:2.8.3']
            
            // cache dynamic versions for 10 minutes
            cacheDynamicVersionsFor 10*60, 'seconds'
            // don't cache changing modules at all
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

configurations {
    providedRuntime
    provided

    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

processResources {
    expand(project.properties)
}

install.dependsOn assemble

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'eclipse'

jar{
	baseName = 'generate-cli'
    manifest {
        attributes(
            'Main-Class': 'com.ericsson.eiffel.remrem.generate.cli.CLI'
        )
    }
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.1'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

task integrationTest(type: Test) {
	jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/classes/integrationTest")
    }
    dependsOn integrationTestClasses
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath + sourceSets.main.output
    outputs.upToDateWhen { false }
}

repositories {
    mavenCentral()
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.13'
    
    //commons CLI
    compile 'commons-cli:commons-cli:1.3.1'
    
    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    
    // Will be used to package contents of third party libs
    runtime fileTree(dir: 'libs', include: '*.jar')
}
